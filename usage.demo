
# -----[ Custom Food ]-----

custom_food_test_recipe:
  material: cooked_beef
  display name: <&7>Custom food
  weight: '1'
  type: Item
  food: 10
  thirst: 10
  recipes:
    1:
      type: cooking
      output_quantity: 1
      main_ingredient: custom_cooked_beef/1
      side_ingredients: custom_cooked_porkchop/1
      serving_dish: custom_oak_log/1
      cook_time: 5m
      xp_given: 10

# -----[ Custom Cooking Ingredient ]-----

custom_ingedient:
  material: red_mushroom
  display name: <&7>Custom Ingredient
  weight: '1'
  type: item
  ingredient_category: serving_dish
  # Can be serving_dish, main_ingredient, or side_ingredient

# -----[ Custom Ores ]-----

custom_ore:
  material: iron_ore
  display name: <&7>Custom ore
  weight: '1'
  type: item
  ore:
    1:
      biome: all
	  # The biome that this ore drops in
      block: stone
	  # The block that drops this ore
      tool: custom_iron_pickaxe
    # The tool that is required to break the block with
      chance: 20
	  # Chance that the block will drop the ore.
	  # This is calculated from 1 out of "chance"
	  # So 1 out of 20 means 5% chance to drop this ore
    
# -----[ Custom Equipment ]-----

test_hat:
  type: item
  material: gold_ingot
  category: pants
  # What type of equipment is this item
  # Can be a Necklace, Earrings, Ring, Trinket, Pants, Shoes, Shirt, Gloves, Cape, or a Hat
  weight: 150
  equipment_rating: 5
  # How good is this piece of equipment
  max_stars: 5
  # How many times can this piece of equipment be enhanced
  sockets: 1
  # How many sockets this piece of equipment can have
  equipment_modifiers:
	# What stat modifiers should the player have when wearing this item
    health:
      max: 100
      min: 10
    speed:
      max: 100
      min: 10
    weight:
      max: 100
      min: 10
    power:
      max: 100
      min: 10
    food:
      max: 100
      min: 10
    thirst:
      max: 100
      min: 10
    constitution:
      max: 100
      min: 10
    melee_damage:
      max: 100
      min: 10
    experience_multiplier:
      max: 100
      min: 10
    drop_rate_multiplier:
      max: 100
      min: 10
  damage_modifiers:
    damage_resistance:
      earth:
        max: 0.05
        min: 0.01
      fire:
        max: 0.05
        min: 0.01
      ender:
        max: 0.05
        min: 0.01
      air:
        max: 0.05
        min: 0.01
      water:
        max: 0.05
        min: 0.01
    damage_dealt:
      earth:
        max: 0.05
        min: 0.01
      fire:
        max: 0.05
        min: 0.01
      ender:
        max: 0.05
        min: 0.01
      air:
        max: 0.05
        min: 0.01
      water:
        max: 0.05
        min: 0.01
  display name: "<&c>Test Hat"
  lore:
    - "Something something Hat,"
    - "Something rare something lore"
  drops_on_death: true
  
# Or

test_ring:
  type: item
  material: gold_ingot
  category: ring
  # What type of equipment is this item
  # Can be a Necklace, Earrings, Ring, Trinket, Pants, Shoes, Shirt, Gloves, Cape, or a Hat
  weight: 1000
  equipment_rating: 10
  # How good is this piece of equipment
  max_stars: 10
  # How many times can this piece of equipment be enhanced
  sockets: 3
  # How many sockets this piece of equipment can have
  equipment_modifiers:
	# What stat modifiers should the player have when wearing this item
	# This can have a set value
    health: 100
    speed: 100
    drop_rate_multiplier: 100
	# Or a range of values
    melee_damage:
      max: 100
      min: 10
  damage_modifiers:
    damage_resistance:
      earth: 0.06
      fire: 0.02
    damage_dealt:
      ender: 0.04
      air: 0.03
      water: 0.01
  display name: "<&c>Test Ring"
  lore:
    - "Something something ring,"
    - "Something rare something lore"
  drops_on_death: true

# -----[ Smeltery Recipes ]-----

smeltery_test_recipe1:
  material: iron_ingot
  display name: <&7>Smeltery Test Recipe 1
  weight: '1'
  type: item
  recipes:
    1:
      type: smeltery
      output_quantity: 1
	  # What ingredients this recipe requires, in format ItemTag/Quantity
      input: custom_coal/6|custom_iron_ingot/2
	  # How many items this recipe will produce
      cook_time: 4m
	  # How long it takes to craft this item, as a DurationTag
    
# -----[ Altar Recipes ]-----

altar_test_recipe1:
  type: item
  material: cobblestone
  display name: <&7>Altar test recipe 1
  recipes:
    1:
      type: altar
      output_quantity: 2
	  # How many items this recipe will produce
      input: custom_stone/1|custom_dirt/2
	  # What ingredients this recipe requires, in format ItemTag/Quantity
      cook_time: 10s
	  # How long it takes to craft this item, as a DurationTag
    
# -----[ Alchemy Station Recipes ]-----

alchemy_station_test_recipe1:
  type: item
  material: cobblestone
  display name: <&7>Something
  recipes:
    1:
      type: alchemy
      output_quantity: 2
	  # How many items this recipe will produce
      input: custom_stone/1|custom_dirt/2
	  # What ingredients this recipe requires, in format ItemTag/Quantity
      cook_time: 10s
	  # How long it takes to craft this item, as a DurationTag
    
# -----[ Custom Entity ]-----

mob_spawning_test_entity:
  type: entity
  entity_type: zombie
  custom_name_visible: true
  custom_name: <&4><&l><&n>Bob
  max_health: 2000
  health: 2000
  absorption_health: 2000
  custom:
    spawning_conditions:
      world: tor_mainland|some_other_world
      # world that the mob can spawn in
      biome: plains|dark_forest
      # biome that the mob can spawn in
      every: 5h
      # delay between each mob spawn. this is per player
      aggressive_on_spawn: true
      # whether the mob is aggressive on spawn
      per_world_limit: 1
      # how many can exist on the server at the same time
      air: false
      # does the mob fly / does the mob spawn in air
      max_y: 255
      min_y: 50
      # what Y-level the mob spawns at
      max_distance: 10
      min_distance: 5
      # how far from the player the mob is supposed to spawn at
      water: false
      # Whether the mob can only spawn in water
      above_ground: true
      # Whether the mob can only spawn above ground
      max_quantity: 1
      min_quantity: 1
      # how many mobs spawn at the same time
      time: all
      # Time of day that the mob can spawn
      chance: 10
      # The chance for this mob to spawn every 10 minutes
	    # This is calculated from 1 out of "chance"
      # So 1 out of '10' means 10% chance to spawn every 10 minutes
      spawn_script: mob_spawning_test_script
      # a script that is executed when the mob spawns
    ability_usage:
    - mob_ability_test
    # Abilities that this mob can use

mob_spawning_test_script:
  type: task
  script:
    # <player> is the player that caused the mob to spawn.
    - narrate "<&7>A strange looking zombie has appeared in the distance."
    
# -----[ Custom Mob Ability ]-----

mob_ability_test:
  type: task
  name: mob_ability_test
  ability_tree: Nether
  cooldown: 10s
  # How long until the mob is able to use this skill again
  warmup: 2s
  # How long it takes the mob to prepare to use this skill
  # while preparing, the mob will not be able to move
  requires_target: true
  # Whether the mob requires a target for this skill to be used
  requires_target_in_sight: false
  # Whether the mob requires the target to be in line of sight for this skill to be used
  additional_conditions:
  - <[entity].health.is[less].to[15]>
  # Additional conditions required for this skill to be used.
  # Must be a single tag conditional
  definitions: entity
  # All mob ability scripts must have this
  warmup_script:
    - playeffect heart at:<[entity].location.above[1]> visibility:50 quantity:2 offset:1.0
  script:
    - heal 5 <[entity]>
    - playeffect heart at:<[entity].location.above[1]> visibility:50 quantity:10 offset:1.0
    
# -----[ Custom Mob Drops ]-----
  
custom_mob_drops_test_item:
  type: item
  material: dirt
  display name: Test Item
  mob_drops:
    1:
      dropped_by: some_mob
      # what mob drops this item
      # can be a vanilla mob, or a custom mob
      chance: 4
      # the chance that this mob will drop this item
	    # This is calculated from 1 out of "chance"
      # So 1 out of '4' means 25% chance to drop
      max_quantity: 4
      # Max amount of items to drop
      min_quantity: 1
      # Optional minimum amount of items to drop
      # If no minimum is specified, defaults to 1
    2:
      dropped_by: some_other_mob
      chance: 5
      min_quantity: 3
      max_quantity: 7
